# Generated by CodiumAI
from external_server.external_server_api_client import ExternalServerApiClient

import pytest


class Device:
    def __init__(self, module, deviceType, deviceRole, deviceName, priority):
        self.module = module
        self.deviceType = deviceType
        self.deviceRole = deviceRole
        self.deviceName = deviceName
        self.priority = priority


class TestExternalServerApiClient:
    module_config = {
        "lib-path": "./external_server/modules/car_accessory_module/build/libcar_accessory_api.so",
        "config": {},
    }

    def test_initialize_with_valid_module_config_and_call_init_successfully(self):
        client = ExternalServerApiClient(
            TestExternalServerApiClient.module_config, "BringAuto", "Car1"
        )
        client.init()
        assert client.library is not None
        assert client.context is not None

    def test_device_connected_with_valid_device_object_and_get_successful_result(self):
        client = ExternalServerApiClient(
            TestExternalServerApiClient.module_config, "BringAuto", "Car1"
        )
        client.init()

        device = Device(1, 2, "role", "name", 3)
        result = client.device_connected(device)

        assert result == 0

    def test_device_disconnected_with_valid_device_object_and_get_successful_result(self):
        client = ExternalServerApiClient(
            TestExternalServerApiClient.module_config, "BringAuto", "Car1"
        )
        client.init()

        device = Device(1, 2, "role", "name", 3)
        result = client.device_connected(device)
        assert result == 0
        result = client.device_disconnected(device)
        assert result == 0
